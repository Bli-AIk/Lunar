### YamlMime:ManagedReference
items:
- uid: Lunar.Interfaces.IInputActions
  commentId: T:Lunar.Interfaces.IInputActions
  id: IInputActions
  parent: Lunar.Interfaces
  children:
  - Lunar.Interfaces.IInputActions.Bindings
  - Lunar.Interfaces.IInputActions.ClearBindings
  - Lunar.Interfaces.IInputActions.GetAction(System.String)
  - Lunar.Interfaces.IInputActions.GetActionDown(System.String)
  - Lunar.Interfaces.IInputActions.GetActionUp(System.String)
  - Lunar.Interfaces.IInputActions.Input
  - Lunar.Interfaces.IInputActions.RemoveBinding(System.String)
  - Lunar.Interfaces.IInputActions.SetBinding(System.String,Lunar.KeyCode[])
  langs:
  - csharp
  - vb
  name: IInputActions
  nameWithType: IInputActions
  fullName: Lunar.Interfaces.IInputActions
  type: Interface
  source:
    remote:
      path: src/Lunar/Interfaces/IInput.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: IInputActions
    path: ../src/Lunar/Interfaces/IInput.cs
    startLine: 19
  assemblies:
  - Lunar
  namespace: Lunar.Interfaces
  summary: "\nBehavioral interface based on Basic input.\n"
  example: []
  syntax:
    content: public interface IInputActions
    content.vb: Public Interface IInputActions
- uid: Lunar.Interfaces.IInputActions.Bindings
  commentId: P:Lunar.Interfaces.IInputActions.Bindings
  id: Bindings
  parent: Lunar.Interfaces.IInputActions
  langs:
  - csharp
  - vb
  name: Bindings
  nameWithType: IInputActions.Bindings
  fullName: Lunar.Interfaces.IInputActions.Bindings
  type: Property
  source:
    remote:
      path: src/Lunar/Interfaces/IInput.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: Bindings
    path: ../src/Lunar/Interfaces/IInput.cs
    startLine: 21
  assemblies:
  - Lunar
  namespace: Lunar.Interfaces
  syntax:
    content: Dictionary<string, KeyCode[]> Bindings { get; }
    parameters: []
    return:
      type: Dictionary{System.String,Lunar.KeyCode[]}
    content.vb: ReadOnly Property Bindings As Dictionary(Of String, KeyCode())
  overload: Lunar.Interfaces.IInputActions.Bindings*
- uid: Lunar.Interfaces.IInputActions.Input
  commentId: P:Lunar.Interfaces.IInputActions.Input
  id: Input
  parent: Lunar.Interfaces.IInputActions
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: IInputActions.Input
  fullName: Lunar.Interfaces.IInputActions.Input
  type: Property
  source:
    remote:
      path: src/Lunar/Interfaces/IInput.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: Input
    path: ../src/Lunar/Interfaces/IInput.cs
    startLine: 22
  assemblies:
  - Lunar
  namespace: Lunar.Interfaces
  syntax:
    content: IInput Input { get; }
    parameters: []
    return:
      type: Lunar.Interfaces.IInput
    content.vb: ReadOnly Property Input As IInput
  overload: Lunar.Interfaces.IInputActions.Input*
- uid: Lunar.Interfaces.IInputActions.SetBinding(System.String,Lunar.KeyCode[])
  commentId: M:Lunar.Interfaces.IInputActions.SetBinding(System.String,Lunar.KeyCode[])
  id: SetBinding(System.String,Lunar.KeyCode[])
  parent: Lunar.Interfaces.IInputActions
  langs:
  - csharp
  - vb
  name: SetBinding(string, params KeyCode[])
  nameWithType: IInputActions.SetBinding(string, params KeyCode[])
  fullName: Lunar.Interfaces.IInputActions.SetBinding(string, params Lunar.KeyCode[])
  type: Method
  source:
    remote:
      path: src/Lunar/Interfaces/IInput.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: SetBinding
    path: ../src/Lunar/Interfaces/IInput.cs
    startLine: 30
  assemblies:
  - Lunar
  namespace: Lunar.Interfaces
  summary: "\nSet the key bindings for a given action.\n"
  example: []
  syntax:
    content: bool SetBinding(string action, params KeyCode[] keys)
    parameters:
    - id: action
      type: System.String
      description: Logical action name (e.g. &quot;Jump&quot;).
    - id: keys
      type: Lunar.KeyCode[]
      description: One or more physical keys to bind.
    return:
      type: System.Boolean
      description: True if the binding is set successfully, false otherwise.
    content.vb: Function SetBinding(action As String, ParamArray keys As KeyCode()) As Boolean
  overload: Lunar.Interfaces.IInputActions.SetBinding*
  nameWithType.vb: IInputActions.SetBinding(String, ParamArray KeyCode())
  fullName.vb: Lunar.Interfaces.IInputActions.SetBinding(String, ParamArray Lunar.KeyCode())
  name.vb: SetBinding(String, ParamArray KeyCode())
- uid: Lunar.Interfaces.IInputActions.RemoveBinding(System.String)
  commentId: M:Lunar.Interfaces.IInputActions.RemoveBinding(System.String)
  id: RemoveBinding(System.String)
  parent: Lunar.Interfaces.IInputActions
  langs:
  - csharp
  - vb
  name: RemoveBinding(string)
  nameWithType: IInputActions.RemoveBinding(string)
  fullName: Lunar.Interfaces.IInputActions.RemoveBinding(string)
  type: Method
  source:
    remote:
      path: src/Lunar/Interfaces/IInput.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: RemoveBinding
    path: ../src/Lunar/Interfaces/IInput.cs
    startLine: 37
  assemblies:
  - Lunar
  namespace: Lunar.Interfaces
  summary: "\nRemove the binding for a given action.\n"
  example: []
  syntax:
    content: bool RemoveBinding(string action)
    parameters:
    - id: action
      type: System.String
      description: Logical action name.
    return:
      type: System.Boolean
      description: True if the binding was removed, false if it did not exist.
    content.vb: Function RemoveBinding(action As String) As Boolean
  overload: Lunar.Interfaces.IInputActions.RemoveBinding*
  nameWithType.vb: IInputActions.RemoveBinding(String)
  fullName.vb: Lunar.Interfaces.IInputActions.RemoveBinding(String)
  name.vb: RemoveBinding(String)
- uid: Lunar.Interfaces.IInputActions.ClearBindings
  commentId: M:Lunar.Interfaces.IInputActions.ClearBindings
  id: ClearBindings
  parent: Lunar.Interfaces.IInputActions
  langs:
  - csharp
  - vb
  name: ClearBindings()
  nameWithType: IInputActions.ClearBindings()
  fullName: Lunar.Interfaces.IInputActions.ClearBindings()
  type: Method
  source:
    remote:
      path: src/Lunar/Interfaces/IInput.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: ClearBindings
    path: ../src/Lunar/Interfaces/IInput.cs
    startLine: 42
  assemblies:
  - Lunar
  namespace: Lunar.Interfaces
  summary: "\nRemove all bindings.\n"
  example: []
  syntax:
    content: void ClearBindings()
    content.vb: Sub ClearBindings()
  overload: Lunar.Interfaces.IInputActions.ClearBindings*
- uid: Lunar.Interfaces.IInputActions.GetActionDown(System.String)
  commentId: M:Lunar.Interfaces.IInputActions.GetActionDown(System.String)
  id: GetActionDown(System.String)
  parent: Lunar.Interfaces.IInputActions
  langs:
  - csharp
  - vb
  name: GetActionDown(string)
  nameWithType: IInputActions.GetActionDown(string)
  fullName: Lunar.Interfaces.IInputActions.GetActionDown(string)
  type: Method
  source:
    remote:
      path: src/Lunar/Interfaces/IInput.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: GetActionDown
    path: ../src/Lunar/Interfaces/IInput.cs
    startLine: 49
  assemblies:
  - Lunar
  namespace: Lunar.Interfaces
  summary: "\nCheck if the given action was pressed down this frame.\n"
  example: []
  syntax:
    content: bool GetActionDown(string action)
    parameters:
    - id: action
      type: System.String
      description: Logical action name.
    return:
      type: System.Boolean
      description: True if the action was pressed down this frame.
    content.vb: Function GetActionDown(action As String) As Boolean
  overload: Lunar.Interfaces.IInputActions.GetActionDown*
  nameWithType.vb: IInputActions.GetActionDown(String)
  fullName.vb: Lunar.Interfaces.IInputActions.GetActionDown(String)
  name.vb: GetActionDown(String)
- uid: Lunar.Interfaces.IInputActions.GetAction(System.String)
  commentId: M:Lunar.Interfaces.IInputActions.GetAction(System.String)
  id: GetAction(System.String)
  parent: Lunar.Interfaces.IInputActions
  langs:
  - csharp
  - vb
  name: GetAction(string)
  nameWithType: IInputActions.GetAction(string)
  fullName: Lunar.Interfaces.IInputActions.GetAction(string)
  type: Method
  source:
    remote:
      path: src/Lunar/Interfaces/IInput.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: GetAction
    path: ../src/Lunar/Interfaces/IInput.cs
    startLine: 56
  assemblies:
  - Lunar
  namespace: Lunar.Interfaces
  summary: "\nCheck if the given action is currently held.\n"
  example: []
  syntax:
    content: bool GetAction(string action)
    parameters:
    - id: action
      type: System.String
      description: Logical action name.
    return:
      type: System.Boolean
      description: True if the action is being held.
    content.vb: Function GetAction(action As String) As Boolean
  overload: Lunar.Interfaces.IInputActions.GetAction*
  nameWithType.vb: IInputActions.GetAction(String)
  fullName.vb: Lunar.Interfaces.IInputActions.GetAction(String)
  name.vb: GetAction(String)
- uid: Lunar.Interfaces.IInputActions.GetActionUp(System.String)
  commentId: M:Lunar.Interfaces.IInputActions.GetActionUp(System.String)
  id: GetActionUp(System.String)
  parent: Lunar.Interfaces.IInputActions
  langs:
  - csharp
  - vb
  name: GetActionUp(string)
  nameWithType: IInputActions.GetActionUp(string)
  fullName: Lunar.Interfaces.IInputActions.GetActionUp(string)
  type: Method
  source:
    remote:
      path: src/Lunar/Interfaces/IInput.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: GetActionUp
    path: ../src/Lunar/Interfaces/IInput.cs
    startLine: 63
  assemblies:
  - Lunar
  namespace: Lunar.Interfaces
  summary: "\nCheck if the given action was released this frame.\n"
  example: []
  syntax:
    content: bool GetActionUp(string action)
    parameters:
    - id: action
      type: System.String
      description: Logical action name.
    return:
      type: System.Boolean
      description: True if the action was released this frame.
    content.vb: Function GetActionUp(action As String) As Boolean
  overload: Lunar.Interfaces.IInputActions.GetActionUp*
  nameWithType.vb: IInputActions.GetActionUp(String)
  fullName.vb: Lunar.Interfaces.IInputActions.GetActionUp(String)
  name.vb: GetActionUp(String)
references:
- uid: Lunar.Interfaces
  commentId: N:Lunar.Interfaces
  name: Lunar.Interfaces
  nameWithType: Lunar.Interfaces
  fullName: Lunar.Interfaces
  spec.csharp:
  - uid: Lunar
    name: Lunar
  - name: .
  - uid: Lunar.Interfaces
    name: Interfaces
  spec.vb:
  - uid: Lunar
    name: Lunar
  - name: .
  - uid: Lunar.Interfaces
    name: Interfaces
- uid: Lunar.Interfaces.IInputActions.Bindings*
  commentId: Overload:Lunar.Interfaces.IInputActions.Bindings
  name: Bindings
  nameWithType: IInputActions.Bindings
  fullName: Lunar.Interfaces.IInputActions.Bindings
- uid: Dictionary{System.String,Lunar.KeyCode[]}
  commentId: '!:Dictionary{System.String,Lunar.KeyCode[]}'
  definition: Dictionary`2
  name: Dictionary<string, KeyCode[]>
  nameWithType: Dictionary<string, KeyCode[]>
  fullName: Dictionary<string, Lunar.KeyCode[]>
  nameWithType.vb: Dictionary(Of String, KeyCode())
  fullName.vb: Dictionary(Of String, Lunar.KeyCode())
  name.vb: Dictionary(Of String, KeyCode())
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Lunar.KeyCode
    name: KeyCode
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Lunar.KeyCode
    name: KeyCode
  - name: (
  - name: )
  - name: )
- uid: Dictionary`2
  commentId: '!:Dictionary`2'
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: )
- uid: Lunar.Interfaces.IInputActions.Input*
  commentId: Overload:Lunar.Interfaces.IInputActions.Input
  name: Input
  nameWithType: IInputActions.Input
  fullName: Lunar.Interfaces.IInputActions.Input
- uid: Lunar.Interfaces.IInput
  commentId: T:Lunar.Interfaces.IInput
  parent: Lunar.Interfaces
  name: IInput
  nameWithType: IInput
  fullName: Lunar.Interfaces.IInput
- uid: Lunar.Interfaces.IInputActions.SetBinding*
  commentId: Overload:Lunar.Interfaces.IInputActions.SetBinding
  name: SetBinding
  nameWithType: IInputActions.SetBinding
  fullName: Lunar.Interfaces.IInputActions.SetBinding
- uid: System.String
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Lunar.KeyCode[]
  isExternal: true
  name: KeyCode[]
  nameWithType: KeyCode[]
  fullName: Lunar.KeyCode[]
  nameWithType.vb: KeyCode()
  fullName.vb: Lunar.KeyCode()
  name.vb: KeyCode()
  spec.csharp:
  - uid: Lunar.KeyCode
    name: KeyCode
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Lunar.KeyCode
    name: KeyCode
  - name: (
  - name: )
- uid: System.Boolean
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Lunar.Interfaces.IInputActions.RemoveBinding*
  commentId: Overload:Lunar.Interfaces.IInputActions.RemoveBinding
  name: RemoveBinding
  nameWithType: IInputActions.RemoveBinding
  fullName: Lunar.Interfaces.IInputActions.RemoveBinding
- uid: Lunar.Interfaces.IInputActions.ClearBindings*
  commentId: Overload:Lunar.Interfaces.IInputActions.ClearBindings
  name: ClearBindings
  nameWithType: IInputActions.ClearBindings
  fullName: Lunar.Interfaces.IInputActions.ClearBindings
- uid: Lunar.Interfaces.IInputActions.GetActionDown*
  commentId: Overload:Lunar.Interfaces.IInputActions.GetActionDown
  name: GetActionDown
  nameWithType: IInputActions.GetActionDown
  fullName: Lunar.Interfaces.IInputActions.GetActionDown
- uid: Lunar.Interfaces.IInputActions.GetAction*
  commentId: Overload:Lunar.Interfaces.IInputActions.GetAction
  name: GetAction
  nameWithType: IInputActions.GetAction
  fullName: Lunar.Interfaces.IInputActions.GetAction
- uid: Lunar.Interfaces.IInputActions.GetActionUp*
  commentId: Overload:Lunar.Interfaces.IInputActions.GetActionUp
  name: GetActionUp
  nameWithType: IInputActions.GetActionUp
  fullName: Lunar.Interfaces.IInputActions.GetActionUp
