### YamlMime:ManagedReference
items:
- uid: Lunar.Modules.TypeWriter.Test.TypeWriterTest
  commentId: T:Lunar.Modules.TypeWriter.Test.TypeWriterTest
  id: TypeWriterTest
  parent: Lunar.Modules.TypeWriter.Test
  children:
  - Lunar.Modules.TypeWriter.Test.TypeWriterTest.Cancel_ShouldStopTypingAndSetStateToCancelled
  - Lunar.Modules.TypeWriter.Test.TypeWriterTest.PauseAndResume_ShouldPauseTypingAndContinueAfterResume
  - Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCalls_ByRestarting
  - Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCallsWithDifferentText
  - Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse
  - Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldSetResultTextToSourceText_WhenCompleted
  langs:
  - csharp
  - vb
  name: TypeWriterTest
  nameWithType: TypeWriterTest
  fullName: Lunar.Modules.TypeWriter.Test.TypeWriterTest
  type: Class
  source:
    remote:
      path: src/Lunar.Modules.TypeWriter.Test/TypeWriterTest.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: TypeWriterTest
    path: ../src/Lunar.Modules.TypeWriter.Test/TypeWriterTest.cs
    startLine: 5
  assemblies:
  - Lunar.Modules.TypeWriter.Test
  namespace: Lunar.Modules.TypeWriter.Test
  syntax:
    content: public class TypeWriterTest
    content.vb: Public Class TypeWriterTest
  inheritance:
  - System.Object
- uid: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldSetResultTextToSourceText_WhenCompleted
  commentId: M:Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldSetResultTextToSourceText_WhenCompleted
  id: StartAsync_ShouldSetResultTextToSourceText_WhenCompleted
  parent: Lunar.Modules.TypeWriter.Test.TypeWriterTest
  langs:
  - csharp
  - vb
  name: StartAsync_ShouldSetResultTextToSourceText_WhenCompleted()
  nameWithType: TypeWriterTest.StartAsync_ShouldSetResultTextToSourceText_WhenCompleted()
  fullName: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldSetResultTextToSourceText_WhenCompleted()
  type: Method
  source:
    remote:
      path: src/Lunar.Modules.TypeWriter.Test/TypeWriterTest.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: StartAsync_ShouldSetResultTextToSourceText_WhenCompleted
    path: ../src/Lunar.Modules.TypeWriter.Test/TypeWriterTest.cs
    startLine: 11
  assemblies:
  - Lunar.Modules.TypeWriter.Test
  namespace: Lunar.Modules.TypeWriter.Test
  syntax:
    content: public Task StartAsync_ShouldSetResultTextToSourceText_WhenCompleted()
    return:
      type: Task
    content.vb: Public Function StartAsync_ShouldSetResultTextToSourceText_WhenCompleted() As Task
  overload: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldSetResultTextToSourceText_WhenCompleted*
- uid: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCalls_ByRestarting
  commentId: M:Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCalls_ByRestarting
  id: StartAsync_ShouldHandleFrequentCalls_ByRestarting
  parent: Lunar.Modules.TypeWriter.Test.TypeWriterTest
  langs:
  - csharp
  - vb
  name: StartAsync_ShouldHandleFrequentCalls_ByRestarting()
  nameWithType: TypeWriterTest.StartAsync_ShouldHandleFrequentCalls_ByRestarting()
  fullName: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCalls_ByRestarting()
  type: Method
  source:
    remote:
      path: src/Lunar.Modules.TypeWriter.Test/TypeWriterTest.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: StartAsync_ShouldHandleFrequentCalls_ByRestarting
    path: ../src/Lunar.Modules.TypeWriter.Test/TypeWriterTest.cs
    startLine: 26
  assemblies:
  - Lunar.Modules.TypeWriter.Test
  namespace: Lunar.Modules.TypeWriter.Test
  syntax:
    content: public Task StartAsync_ShouldHandleFrequentCalls_ByRestarting()
    return:
      type: Task
    content.vb: Public Function StartAsync_ShouldHandleFrequentCalls_ByRestarting() As Task
  overload: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCalls_ByRestarting*
- uid: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCallsWithDifferentText
  commentId: M:Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCallsWithDifferentText
  id: StartAsync_ShouldHandleFrequentCallsWithDifferentText
  parent: Lunar.Modules.TypeWriter.Test.TypeWriterTest
  langs:
  - csharp
  - vb
  name: StartAsync_ShouldHandleFrequentCallsWithDifferentText()
  nameWithType: TypeWriterTest.StartAsync_ShouldHandleFrequentCallsWithDifferentText()
  fullName: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCallsWithDifferentText()
  type: Method
  source:
    remote:
      path: src/Lunar.Modules.TypeWriter.Test/TypeWriterTest.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: StartAsync_ShouldHandleFrequentCallsWithDifferentText
    path: ../src/Lunar.Modules.TypeWriter.Test/TypeWriterTest.cs
    startLine: 52
  assemblies:
  - Lunar.Modules.TypeWriter.Test
  namespace: Lunar.Modules.TypeWriter.Test
  syntax:
    content: public Task StartAsync_ShouldHandleFrequentCallsWithDifferentText()
    return:
      type: Task
    content.vb: Public Function StartAsync_ShouldHandleFrequentCallsWithDifferentText() As Task
  overload: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCallsWithDifferentText*
- uid: Lunar.Modules.TypeWriter.Test.TypeWriterTest.PauseAndResume_ShouldPauseTypingAndContinueAfterResume
  commentId: M:Lunar.Modules.TypeWriter.Test.TypeWriterTest.PauseAndResume_ShouldPauseTypingAndContinueAfterResume
  id: PauseAndResume_ShouldPauseTypingAndContinueAfterResume
  parent: Lunar.Modules.TypeWriter.Test.TypeWriterTest
  langs:
  - csharp
  - vb
  name: PauseAndResume_ShouldPauseTypingAndContinueAfterResume()
  nameWithType: TypeWriterTest.PauseAndResume_ShouldPauseTypingAndContinueAfterResume()
  fullName: Lunar.Modules.TypeWriter.Test.TypeWriterTest.PauseAndResume_ShouldPauseTypingAndContinueAfterResume()
  type: Method
  source:
    remote:
      path: src/Lunar.Modules.TypeWriter.Test/TypeWriterTest.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: PauseAndResume_ShouldPauseTypingAndContinueAfterResume
    path: ../src/Lunar.Modules.TypeWriter.Test/TypeWriterTest.cs
    startLine: 70
  assemblies:
  - Lunar.Modules.TypeWriter.Test
  namespace: Lunar.Modules.TypeWriter.Test
  syntax:
    content: public Task PauseAndResume_ShouldPauseTypingAndContinueAfterResume()
    return:
      type: Task
    content.vb: Public Function PauseAndResume_ShouldPauseTypingAndContinueAfterResume() As Task
  overload: Lunar.Modules.TypeWriter.Test.TypeWriterTest.PauseAndResume_ShouldPauseTypingAndContinueAfterResume*
- uid: Lunar.Modules.TypeWriter.Test.TypeWriterTest.Cancel_ShouldStopTypingAndSetStateToCancelled
  commentId: M:Lunar.Modules.TypeWriter.Test.TypeWriterTest.Cancel_ShouldStopTypingAndSetStateToCancelled
  id: Cancel_ShouldStopTypingAndSetStateToCancelled
  parent: Lunar.Modules.TypeWriter.Test.TypeWriterTest
  langs:
  - csharp
  - vb
  name: Cancel_ShouldStopTypingAndSetStateToCancelled()
  nameWithType: TypeWriterTest.Cancel_ShouldStopTypingAndSetStateToCancelled()
  fullName: Lunar.Modules.TypeWriter.Test.TypeWriterTest.Cancel_ShouldStopTypingAndSetStateToCancelled()
  type: Method
  source:
    remote:
      path: src/Lunar.Modules.TypeWriter.Test/TypeWriterTest.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: Cancel_ShouldStopTypingAndSetStateToCancelled
    path: ../src/Lunar.Modules.TypeWriter.Test/TypeWriterTest.cs
    startLine: 100
  assemblies:
  - Lunar.Modules.TypeWriter.Test
  namespace: Lunar.Modules.TypeWriter.Test
  syntax:
    content: public Task Cancel_ShouldStopTypingAndSetStateToCancelled()
    return:
      type: Task
    content.vb: Public Function Cancel_ShouldStopTypingAndSetStateToCancelled() As Task
  overload: Lunar.Modules.TypeWriter.Test.TypeWriterTest.Cancel_ShouldStopTypingAndSetStateToCancelled*
- uid: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse
  commentId: M:Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse
  id: StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse
  parent: Lunar.Modules.TypeWriter.Test.TypeWriterTest
  langs:
  - csharp
  - vb
  name: StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse()
  nameWithType: TypeWriterTest.StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse()
  fullName: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse()
  type: Method
  source:
    remote:
      path: src/Lunar.Modules.TypeWriter.Test/TypeWriterTest.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse
    path: ../src/Lunar.Modules.TypeWriter.Test/TypeWriterTest.cs
    startLine: 122
  assemblies:
  - Lunar.Modules.TypeWriter.Test
  namespace: Lunar.Modules.TypeWriter.Test
  syntax:
    content: public Task StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse()
    return:
      type: Task
    content.vb: Public Function StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse() As Task
  overload: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse*
references:
- uid: Lunar.Modules.TypeWriter.Test
  commentId: N:Lunar.Modules.TypeWriter.Test
  name: Lunar.Modules.TypeWriter.Test
  nameWithType: Lunar.Modules.TypeWriter.Test
  fullName: Lunar.Modules.TypeWriter.Test
  spec.csharp:
  - uid: Lunar
    name: Lunar
  - name: .
  - uid: Lunar.Modules
    name: Modules
  - name: .
  - uid: Lunar.Modules.TypeWriter
    name: TypeWriter
  - name: .
  - uid: Lunar.Modules.TypeWriter.Test
    name: Test
  spec.vb:
  - uid: Lunar
    name: Lunar
  - name: .
  - uid: Lunar.Modules
    name: Modules
  - name: .
  - uid: Lunar.Modules.TypeWriter
    name: TypeWriter
  - name: .
  - uid: Lunar.Modules.TypeWriter.Test
    name: Test
- uid: System.Object
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldSetResultTextToSourceText_WhenCompleted*
  commentId: Overload:Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldSetResultTextToSourceText_WhenCompleted
  name: StartAsync_ShouldSetResultTextToSourceText_WhenCompleted
  nameWithType: TypeWriterTest.StartAsync_ShouldSetResultTextToSourceText_WhenCompleted
  fullName: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldSetResultTextToSourceText_WhenCompleted
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCalls_ByRestarting*
  commentId: Overload:Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCalls_ByRestarting
  name: StartAsync_ShouldHandleFrequentCalls_ByRestarting
  nameWithType: TypeWriterTest.StartAsync_ShouldHandleFrequentCalls_ByRestarting
  fullName: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCalls_ByRestarting
- uid: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCallsWithDifferentText*
  commentId: Overload:Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCallsWithDifferentText
  name: StartAsync_ShouldHandleFrequentCallsWithDifferentText
  nameWithType: TypeWriterTest.StartAsync_ShouldHandleFrequentCallsWithDifferentText
  fullName: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldHandleFrequentCallsWithDifferentText
- uid: Lunar.Modules.TypeWriter.Test.TypeWriterTest.PauseAndResume_ShouldPauseTypingAndContinueAfterResume*
  commentId: Overload:Lunar.Modules.TypeWriter.Test.TypeWriterTest.PauseAndResume_ShouldPauseTypingAndContinueAfterResume
  name: PauseAndResume_ShouldPauseTypingAndContinueAfterResume
  nameWithType: TypeWriterTest.PauseAndResume_ShouldPauseTypingAndContinueAfterResume
  fullName: Lunar.Modules.TypeWriter.Test.TypeWriterTest.PauseAndResume_ShouldPauseTypingAndContinueAfterResume
- uid: Lunar.Modules.TypeWriter.Test.TypeWriterTest.Cancel_ShouldStopTypingAndSetStateToCancelled*
  commentId: Overload:Lunar.Modules.TypeWriter.Test.TypeWriterTest.Cancel_ShouldStopTypingAndSetStateToCancelled
  name: Cancel_ShouldStopTypingAndSetStateToCancelled
  nameWithType: TypeWriterTest.Cancel_ShouldStopTypingAndSetStateToCancelled
  fullName: Lunar.Modules.TypeWriter.Test.TypeWriterTest.Cancel_ShouldStopTypingAndSetStateToCancelled
- uid: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse*
  commentId: Overload:Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse
  name: StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse
  nameWithType: TypeWriterTest.StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse
  fullName: Lunar.Modules.TypeWriter.Test.TypeWriterTest.StartAsync_ShouldNotStartIfPlayingAndIsForceIsFalse
