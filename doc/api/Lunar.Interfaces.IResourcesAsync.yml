### YamlMime:ManagedReference
items:
- uid: Lunar.Interfaces.IResourcesAsync
  commentId: T:Lunar.Interfaces.IResourcesAsync
  id: IResourcesAsync
  parent: Lunar.Interfaces
  children:
  - Lunar.Interfaces.IResourcesAsync.LoadAllAsync``1(IEnumerable{System.String},CancellationToken)
  - Lunar.Interfaces.IResourcesAsync.LoadAllAsync``1(System.String,CancellationToken)
  - Lunar.Interfaces.IResourcesAsync.LoadAsync``1(System.String,CancellationToken)
  langs:
  - csharp
  - vb
  name: IResourcesAsync
  nameWithType: IResourcesAsync
  fullName: Lunar.Interfaces.IResourcesAsync
  type: Interface
  source:
    remote:
      path: src/Lunar/Interfaces/IResources.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: IResourcesAsync
    path: ../src/Lunar/Interfaces/IResources.cs
    startLine: 47
  assemblies:
  - Lunar
  namespace: Lunar.Interfaces
  summary: "\n(Async) Resource system interface.\n"
  example: []
  syntax:
    content: public interface IResourcesAsync
    content.vb: Public Interface IResourcesAsync
- uid: Lunar.Interfaces.IResourcesAsync.LoadAsync``1(System.String,CancellationToken)
  commentId: M:Lunar.Interfaces.IResourcesAsync.LoadAsync``1(System.String,CancellationToken)
  id: LoadAsync``1(System.String,CancellationToken)
  parent: Lunar.Interfaces.IResourcesAsync
  langs:
  - csharp
  - vb
  name: LoadAsync<T>(string, CancellationToken)
  nameWithType: IResourcesAsync.LoadAsync<T>(string, CancellationToken)
  fullName: Lunar.Interfaces.IResourcesAsync.LoadAsync<T>(string, CancellationToken)
  type: Method
  source:
    remote:
      path: src/Lunar/Interfaces/IResources.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: LoadAsync
    path: ../src/Lunar/Interfaces/IResources.cs
    startLine: 56
  assemblies:
  - Lunar
  namespace: Lunar.Interfaces
  summary: "\n(Async) Loading resources.\n"
  example: []
  syntax:
    content: Task<T> LoadAsync<T>(string path, CancellationToken ct = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the resource
    - id: ct
      type: CancellationToken
      description: CancellationToken
    typeParameters:
    - id: T
      description: Resource type
    return:
      type: Task{{T}}
      description: Resource
    content.vb: Function LoadAsync(Of T)(path As String, ct As CancellationToken = Nothing) As Task(Of T)
  overload: Lunar.Interfaces.IResourcesAsync.LoadAsync*
  nameWithType.vb: IResourcesAsync.LoadAsync(Of T)(String, CancellationToken)
  fullName.vb: Lunar.Interfaces.IResourcesAsync.LoadAsync(Of T)(String, CancellationToken)
  name.vb: LoadAsync(Of T)(String, CancellationToken)
- uid: Lunar.Interfaces.IResourcesAsync.LoadAllAsync``1(System.String,CancellationToken)
  commentId: M:Lunar.Interfaces.IResourcesAsync.LoadAllAsync``1(System.String,CancellationToken)
  id: LoadAllAsync``1(System.String,CancellationToken)
  parent: Lunar.Interfaces.IResourcesAsync
  langs:
  - csharp
  - vb
  name: LoadAllAsync<T>(string, CancellationToken)
  nameWithType: IResourcesAsync.LoadAllAsync<T>(string, CancellationToken)
  fullName: Lunar.Interfaces.IResourcesAsync.LoadAllAsync<T>(string, CancellationToken)
  type: Method
  source:
    remote:
      path: src/Lunar/Interfaces/IResources.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: LoadAllAsync
    path: ../src/Lunar/Interfaces/IResources.cs
    startLine: 65
  assemblies:
  - Lunar
  namespace: Lunar.Interfaces
  summary: "\n(Async) Loading resources from folder path\n"
  example: []
  syntax:
    content: Task<IEnumerable<T>> LoadAllAsync<T>(string path, CancellationToken ct = null)
    parameters:
    - id: path
      type: System.String
      description: The path to the folder
    - id: ct
      type: CancellationToken
      description: CancellationToken
    typeParameters:
    - id: T
      description: Resource type
    return:
      type: Task{IEnumerable{{T}}}
      description: Resources
    content.vb: Function LoadAllAsync(Of T)(path As String, ct As CancellationToken = Nothing) As Task(Of IEnumerable(Of T))
  overload: Lunar.Interfaces.IResourcesAsync.LoadAllAsync*
  nameWithType.vb: IResourcesAsync.LoadAllAsync(Of T)(String, CancellationToken)
  fullName.vb: Lunar.Interfaces.IResourcesAsync.LoadAllAsync(Of T)(String, CancellationToken)
  name.vb: LoadAllAsync(Of T)(String, CancellationToken)
- uid: Lunar.Interfaces.IResourcesAsync.LoadAllAsync``1(IEnumerable{System.String},CancellationToken)
  commentId: M:Lunar.Interfaces.IResourcesAsync.LoadAllAsync``1(IEnumerable{System.String},CancellationToken)
  id: LoadAllAsync``1(IEnumerable{System.String},CancellationToken)
  parent: Lunar.Interfaces.IResourcesAsync
  langs:
  - csharp
  - vb
  name: LoadAllAsync<T>(IEnumerable<string>, CancellationToken)
  nameWithType: IResourcesAsync.LoadAllAsync<T>(IEnumerable<string>, CancellationToken)
  fullName: Lunar.Interfaces.IResourcesAsync.LoadAllAsync<T>(IEnumerable<string>, CancellationToken)
  type: Method
  source:
    remote:
      path: src/Lunar/Interfaces/IResources.cs
      branch: main
      repo: git@github.com:Bli-AIk/Lunar.git
    id: LoadAllAsync
    path: ../src/Lunar/Interfaces/IResources.cs
    startLine: 74
  assemblies:
  - Lunar
  namespace: Lunar.Interfaces
  summary: "\n(Async) Loading resources from folder path\n"
  example: []
  syntax:
    content: Task<IEnumerable<T>> LoadAllAsync<T>(IEnumerable<string> paths, CancellationToken ct = null)
    parameters:
    - id: paths
      type: IEnumerable{System.String}
      description: The paths to the resources
    - id: ct
      type: CancellationToken
      description: CancellationToken
    typeParameters:
    - id: T
      description: Resource type
    return:
      type: Task{IEnumerable{{T}}}
      description: Resources
    content.vb: Function LoadAllAsync(Of T)(paths As IEnumerable(Of String), ct As CancellationToken = Nothing) As Task(Of IEnumerable(Of T))
  overload: Lunar.Interfaces.IResourcesAsync.LoadAllAsync*
  nameWithType.vb: IResourcesAsync.LoadAllAsync(Of T)(IEnumerable(Of String), CancellationToken)
  fullName.vb: Lunar.Interfaces.IResourcesAsync.LoadAllAsync(Of T)(IEnumerable(Of String), CancellationToken)
  name.vb: LoadAllAsync(Of T)(IEnumerable(Of String), CancellationToken)
references:
- uid: Lunar.Interfaces
  commentId: N:Lunar.Interfaces
  name: Lunar.Interfaces
  nameWithType: Lunar.Interfaces
  fullName: Lunar.Interfaces
  spec.csharp:
  - uid: Lunar
    name: Lunar
  - name: .
  - uid: Lunar.Interfaces
    name: Interfaces
  spec.vb:
  - uid: Lunar
    name: Lunar
  - name: .
  - uid: Lunar.Interfaces
    name: Interfaces
- uid: Lunar.Interfaces.IResourcesAsync.LoadAsync*
  commentId: Overload:Lunar.Interfaces.IResourcesAsync.LoadAsync
  name: LoadAsync
  nameWithType: IResourcesAsync.LoadAsync
  fullName: Lunar.Interfaces.IResourcesAsync.LoadAsync
- uid: System.String
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: Task{{T}}
  commentId: '!:Task{``0}'
  definition: Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: Task`1
    name: Task
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Lunar.Interfaces.IResourcesAsync.LoadAllAsync*
  commentId: Overload:Lunar.Interfaces.IResourcesAsync.LoadAllAsync
  name: LoadAllAsync
  nameWithType: IResourcesAsync.LoadAllAsync
  fullName: Lunar.Interfaces.IResourcesAsync.LoadAllAsync
- uid: Task{IEnumerable{{T}}}
  commentId: '!:Task{IEnumerable{``0}}'
  definition: Task`1
  name: Task<IEnumerable<T>>
  nameWithType: Task<IEnumerable<T>>
  fullName: Task<IEnumerable<T>>
  nameWithType.vb: Task(Of IEnumerable(Of T))
  fullName.vb: Task(Of IEnumerable(Of T))
  name.vb: Task(Of IEnumerable(Of T))
  spec.csharp:
  - uid: Task`1
    name: Task
    isExternal: true
  - name: <
  - uid: IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: IEnumerable{System.String}
  commentId: '!:IEnumerable{System.String}'
  definition: IEnumerable`1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
